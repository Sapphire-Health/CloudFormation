Parameters:
  CentralIngressVPCCIDR:
    Description: VPC for third party load balancers for external traffic
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.0.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  CentralEgressVPCCIDR:
    Description: VPC for NAT Gateways so private VPCs can access the internet
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.1.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.  

  InspectionVPCCIDR:
    Description: VPC for Network Firewalls
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.2.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  SharedInfrastructureVPCCIDR:
    Description: VPC for shared infrastructure and core Windows servers
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.3.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  EpicVPCCIDR:
    Description: VPC for Epic Database and Epic Client Servers
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 10.0.4.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html
  EpicTransitGateway:
    Type: "AWS::EC2::TransitGateway"
    Properties:
      Description: "Epic Read Only Transit Gateway"
      AutoAcceptSharedAttachments: "disable"
      DefaultRouteTableAssociation: "enable"
      DnsSupport: "enable"
      VpnEcmpSupport: "enable"
      Tags:
      - Key: Name
        Value: !Sub 'TransitGateway-${AWS::StackName}'



  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
  CentralIngressVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref CentralIngressVPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressVPC-${AWS::StackName}'

  CentralEgressVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref CentralEgressVPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressVPC-${AWS::StackName}'

  InspectionVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref InspectionVPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'InspectionVPC-${AWS::StackName}'  

  SharedInfrastructureVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref SharedInfrastructureVPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'SharedInfrastructureVPC-${AWS::StackName}' 

  EpicVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref EpicVPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Key: Name
          Value: !Sub 'EpicVPC-${AWS::StackName}'             

#https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
  CentralIngressPublic1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt CentralIngressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPublicAZ1-${AWS::StackName}'
  CentralIngressPublic2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt CentralIngressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPublicAZ2-${AWS::StackName}'
  CentralIngressPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt CentralIngressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPrivateAZ1-${AWS::StackName}'      
  CentralIngressPrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt CentralIngressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPrivateAZ2-${AWS::StackName}'                            
  CentralEgressPublic1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt CentralEgressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPublicAZ1-${AWS::StackName}'      
  CentralEgressPublic2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt CentralEgressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPublicAZ2-${AWS::StackName}'  
  CentralEgressPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt CentralEgressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPrivateAZ1-${AWS::StackName}'      
  CentralEgressPrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt CentralEgressVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPrivateAZ2-${AWS::StackName}'          
  InspectionPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt InspectionVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionPrivateAZ1-${AWS::StackName}'      
  InspectionPrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt InspectionVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionPrivateAZ2-${AWS::StackName}'        
  InspectionTGW1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt InspectionVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionTGW1-${AWS::StackName}'    
  InspectionTGW2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt InspectionVPC.CidrBlock, 4, 4 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionTGW2-${AWS::StackName}'                             
  SharedInfrastructurePrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt SharedInfrastructureVPC.CidrBlock, 2, 5 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref SharedInfrastructureVPC
      Tags:
        - Key: Name
          Value: !Sub 'SharedInfraPrivateAZ1-${AWS::StackName}'      
  SharedInfrastructurePrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt SharedInfrastructureVPC.CidrBlock, 2, 5 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref SharedInfrastructureVPC
      Tags:
        - Key: Name
          Value: !Sub 'SharedInfraPrivateAZ2-${AWS::StackName}'
  WSSPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt EpicVPC.CidrBlock, 3, 5 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'WSSPrivateAZ1-${AWS::StackName}'      
  WSSPrivate2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt EpicVPC.CidrBlock, 3, 5 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'WSSPrivateAZ2-${AWS::StackName}'
  ODBPrivate1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, Fn::GetAZs: !Ref AWS::Region]
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt EpicVPC.CidrBlock, 3, 5 ] ]
      MapPublicIpOnLaunch: 'False'
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'ODBPrivateAZ1-${AWS::StackName}'            

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html
  CentralIngressPublic1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPublicAZ1-RT-${AWS::StackName}'
  CentralIngressPublic2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPublicAZ2-RT-${AWS::StackName}'  
  CentralIngressPrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPrivateAZ1-RT-${AWS::StackName}'
  CentralIngressPrivate2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralIngressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralIngressPrivateAZ2-RT-${AWS::StackName}'            
  CentralEgressPublic1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPublicAZ1-RT-${AWS::StackName}'
  CentralEgressPublic2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPublicAZ2-RT-${AWS::StackName}'
  CentralEgressPrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPrivateAZ1-RT-${AWS::StackName}'
  CentralEgressPrivate2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CentralEgressVPC
      Tags:
        - Key: Name
          Value: !Sub 'CentralEgressPrivateAZ2-RT-${AWS::StackName}'          
  InspectionPrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionPrivateAZ1-RT-${AWS::StackName}'
  InspectionPrivate2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionPrivateAZ2-RT-${AWS::StackName}'
  InspectionTGW1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionTGW1-RT-${AWS::StackName}'          
  InspectionTGW2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: !Sub 'InspectionTGW2-RT-${AWS::StackName}'                    
  SharedInfrastructurePrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SharedInfrastructureVPC
      Tags:
        - Key: Name
          Value: !Sub 'SharedInfrastructurePrivateAZ1-RT-${AWS::StackName}'
  SharedInfrastructurePrivate2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SharedInfrastructureVPC
      Tags:
        - Key: Name
          Value: !Sub 'SharedInfrastructurePrivateAZ2-RT-${AWS::StackName}'
  EpicWSSPrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'EpicWSSPrivateAZ1-RT-${AWS::StackName}'
  EpicWSSPrivate2RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'EpicWSSPrivateAZ2-RT-${AWS::StackName}'
  ODBPrivate1RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EpicVPC
      Tags:
        - Key: Name
          Value: !Sub 'ODBPrivateAZ1-RT-${AWS::StackName}'

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html
  CentralIngressPublic1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralIngressPublic1
      RouteTableId: !Ref CentralIngressPublic1RT

  CentralIngressPublic2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralIngressPublic2
      RouteTableId: !Ref CentralIngressPublic2RT

  CentralIngressPrivate1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralIngressPrivate1
      RouteTableId: !Ref CentralIngressPrivate1RT

  CentralIngressPrivate2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralIngressPrivate2
      RouteTableId: !Ref CentralIngressPrivate2RT

  CentralEgressPublic1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressPublic1
      RouteTableId: !Ref CentralEgressPublic1RT

  CentralEgressPublic2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressPublic2
      RouteTableId: !Ref CentralEgressPublic2RT

  CentralEgressPrivate1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressPrivate1
      RouteTableId: !Ref CentralEgressPrivate1RT

  CentralEgressPrivate2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CentralEgressPrivate2
      RouteTableId: !Ref CentralEgressPrivate2RT

  InspectionPrivate1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionPrivate1
      RouteTableId: !Ref InspectionPrivate1RT

  InspectionPrivate2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionPrivate2
      RouteTableId: !Ref InspectionPrivate2RT

  InspectionTGW1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionTGW1
      RouteTableId: !Ref InspectionTGW1RT

  InspectionTGW2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InspectionTGW2
      RouteTableId: !Ref InspectionTGW2RT

  SharedInfrastructurePrivate1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SharedInfrastructurePrivate1
      RouteTableId: !Ref SharedInfrastructurePrivate1RT

  SharedInfrastructurePrivate2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SharedInfrastructurePrivate2
      RouteTableId: !Ref SharedInfrastructurePrivate2RT

  EpicWSS1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WSSPrivate1
      RouteTableId: !Ref EpicWSSPrivate1RT

  EpicWSS2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WSSPrivate2
      RouteTableId: !Ref EpicWSSPrivate2RT

  ODBPrivate1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ODBPrivate1
      RouteTableId: !Ref ODBPrivate1RT

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  RouteIngress1toIGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic1RT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref IngressInternetGateway

  RouteIngress2toIGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic2RT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref IngressInternetGateway    

  RouteIngress1toSharedInfraInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic1RT
       DestinationCidrBlock: !Ref SharedInfrastructureVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngress2toSharedInfraInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic2RT
       DestinationCidrBlock: !Ref SharedInfrastructureVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngress1toEpicInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic1RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngress2toEpicInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic2RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngress1toFWInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic1RT
       DestinationCidrBlock: !Ref InspectionVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngress2toFWInspection:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralIngressPublic2RT
       DestinationCidrBlock: !Ref InspectionVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngressPrivate1toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway
    Properties:
       RouteTableId: !Ref CentralIngressPrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway

  RouteIngressPrivate2toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway
    Properties:
       RouteTableId: !Ref CentralIngressPrivate2RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway

  RouteEgressPublic1toIGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic1RT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref EgressInternetGateway

  RouteEgressPublic2toIGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic2RT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref EgressInternetGateway       

  RouteEgressPublic1toEpicVPC:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic1RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteEgressPublic2toEpicVPC:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic2RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway  

  RouteEgressPublic1toSharedInfraVPC:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic1RT
       DestinationCidrBlock: !Ref SharedInfrastructureVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteEgressPublic2toSharedInfraVPC:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPublic2RT
       DestinationCidrBlock: !Ref SharedInfrastructureVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteEgressPrivate1toNGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref AZ1NATGateway

  RouteEgressPrivate2toNGW:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref CentralEgressPrivate2RT
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref AZ2NATGateway

  RouteInspection1toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway
    Properties:
       RouteTableId: !Ref InspectionPrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway

  RouteInspection2toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref InspectionPrivate2RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway  

  RouteInspection1toEpic:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref InspectionPrivate1RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteInspection2toEpic:
    Type: AWS::EC2::Route   
    Properties:
       RouteTableId: !Ref InspectionPrivate2RT
       DestinationCidrBlock: !Ref EpicVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway 

  RouteInspection1toIngress:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref InspectionPrivate1RT
       DestinationCidrBlock: !Ref CentralIngressVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteInspection2toIngress:
    Type: AWS::EC2::Route   
    Properties:
       RouteTableId: !Ref InspectionPrivate2RT
       DestinationCidrBlock: !Ref CentralIngressVPCCIDR
       TransitGatewayId: !Ref EpicTransitGateway

  RouteSharedInfrastructure1toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref SharedInfrastructurePrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway

  RouteSharedInfrastructure2toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref SharedInfrastructurePrivate2RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway  

  RouteWSS1toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref EpicWSSPrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway

  RouteWSS2toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref EpicWSSPrivate2RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway       

  RouteODB1toTGW:
    Type: AWS::EC2::Route
    DependsOn: EpicTransitGateway    
    Properties:
       RouteTableId: !Ref ODBPrivate1RT
       DestinationCidrBlock: 0.0.0.0/0
       TransitGatewayId: !Ref EpicTransitGateway          

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
  SSMEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcId: !Ref EpicVPC
      SubnetIds:
        - !Ref WSSPrivate1
        - !Ref WSSPrivate2
      PrivateDnsEnabled: true        
      SecurityGroupIds:
        - !Ref VPCESG

  SSMMessageEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      VpcId: !Ref EpicVPC
      SubnetIds:
        - !Ref WSSPrivate1
        - !Ref WSSPrivate2
      PrivateDnsEnabled: true        
      SecurityGroupIds:
        - !Ref VPCESG

  EC2Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2'
      VpcId: !Ref EpicVPC
      SubnetIds:
        - !Ref WSSPrivate1
        - !Ref WSSPrivate2
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCESG

  EC2MessageEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      VpcId: !Ref EpicVPC
      SubnetIds:
        - !Ref WSSPrivate1
        - !Ref WSSPrivate2
      PrivateDnsEnabled: true        
      SecurityGroupIds:
        - !Ref VPCESG

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html
  InspectionVPCTGWAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref InspectionTGW1
        - !Ref InspectionTGW2
      TransitGatewayId: !Ref EpicTransitGateway
      VpcId: !Ref InspectionVPC
      Tags:
        - Key: Name
          Value: InspectionVPC-TGWAttachment

  SharedInfraVPCTGWAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref SharedInfrastructurePrivate1
        - !Ref SharedInfrastructurePrivate2
      TransitGatewayId: !Ref EpicTransitGateway
      VpcId: !Ref SharedInfrastructureVPC      
      Tags:
        - Key: Name
          Value: SharedInfrastructureVPC-TGWAttachment    

  EpicVPCTGWAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref WSSPrivate1
        - !Ref WSSPrivate2
      TransitGatewayId: !Ref EpicTransitGateway
      VpcId: !Ref EpicVPC                    
      Tags:
        - Key: Name
          Value: EpicVPC-TGWAttachment              

  CentralEgressVPCTGWAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref CentralEgressPrivate1
        - !Ref CentralEgressPrivate2
      TransitGatewayId: !Ref EpicTransitGateway
      VpcId: !Ref CentralEgressVPC                    
      Tags:
        - Key: Name
          Value: CentralEgressVPC-TGWAttachment            

  CentralIngressVPCTGWAttach:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties: 
      SubnetIds: 
        - !Ref CentralIngressPrivate1
        - !Ref CentralIngressPrivate2
      TransitGatewayId: !Ref EpicTransitGateway
      VpcId: !Ref CentralIngressVPC                    
      Tags:
        - Key: Name
          Value: CentralIngressVPC-TGWAttachment  

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html
  PreInspectionTGWRT:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties:
      TransitGatewayId: !Ref EpicTransitGateway
      Tags:
        - Key: Name
          Value: EpicRO-PreInspectionTGWRT

  PostInspectionTGWRT:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties:
      TransitGatewayId: !Ref EpicTransitGateway
      Tags:
        - Key: Name
          Value: EpicRO-PostInspectionTGWRT          

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html
  InspectAllTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref InspectionVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PreInspectionTGWRT 

  EgressInternetTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      TransitGatewayAttachmentId: !Ref CentralEgressVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  InspectionVPCTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: !Ref InspectionVPCCIDR
      TransitGatewayAttachmentId: !Ref InspectionVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  SharedInfraVPCTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: !Ref SharedInfrastructureVPCCIDR
      TransitGatewayAttachmentId: !Ref SharedInfraVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  EpicVPCTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: !Ref EpicVPCCIDR
      TransitGatewayAttachmentId: !Ref EpicVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  CentralEgressVPCTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: !Ref CentralEgressVPCCIDR
      TransitGatewayAttachmentId: !Ref CentralEgressVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  CentralIngressVPCTGWRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: !Ref CentralIngressVPCCIDR
      TransitGatewayAttachmentId: !Ref CentralIngressVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT       

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html
  InspectionVPCTGWAttachRT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref InspectionVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT 

  SharedInfraVPCTGWAttachRT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref SharedInfraVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT

  EpicVPCTGWAttachRT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref EpicVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT      

  CentralEgressVPCTGWAttachRT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref CentralEgressVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PostInspectionTGWRT

  CentralIngressVPCTGWAttachRT:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref CentralIngressVPCTGWAttach
      TransitGatewayRouteTableId: !Ref PreInspectionTGWRT

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html        
  IngressInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Environment
          Value: ReadOnly
        - Key: Name
          Value: !Sub 'IGWCentralIngressVPC-${AWS::StackName}'          

  EgressInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Environment
          Value: ReadOnly
        - Key: Name
          Value: !Sub 'IGWCentralEgressVPC-${AWS::StackName}'  

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html      
  IngressAttachIGW:  
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IngressInternetGateway
      VpcId: !Ref CentralIngressVPC

  EgressAttachIGW:  
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref EgressInternetGateway
      VpcId: !Ref CentralEgressVPC      

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html
  NATGatewayEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub 'EIP-NATGWCentralEgressPublicAZ1-${AWS::StackName}'  


  NATGatewayEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub 'EIP-NATGWCentralEgressPublicAZ2-${AWS::StackName}'        

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html 
  AZ1NATGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NATGatewayEIP1.AllocationId
      ConnectivityType: public
      SubnetId: !Ref CentralEgressPublic1
      Tags:
        - Key: Name
          Value: !Sub 'NATGWCentralEgressPublicAZ1-${AWS::StackName}'            
  AZ2NATGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NATGatewayEIP2.AllocationId
      ConnectivityType: public
      SubnetId: !Ref CentralEgressPublic2
      Tags:
        - Key: Name
          Value: !Sub 'NATGWCentralEgressPublicAZ2-${AWS::StackName}'  

  #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  KuiperSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'KuiperSG-${AWS::StackName}'
      GroupDescription: Security Group for Kuiper allowing HTTPS
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      VpcId: !Ref SharedInfrastructureVPC

  PulseSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'PulseSG-${AWS::StackName}'
      GroupDescription: Security Group for System Pulse allowing HTTP(S)
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: HTTP
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref SharedInfrastructureVPC

  SQLSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'SQLSG-${AWS::StackName}'
      GroupDescription: Security Group for Multipurpose SQL Server
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref KuiperSG
          Description: ODBC
          IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
        - SourceSecurityGroupId: !Ref PulseSG
          Description: ODBC
          IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433          
      VpcId: !Ref SharedInfrastructureVPC

  ICFGSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'ICFGSG-${AWS::StackName}'
      GroupDescription: Security Group for Foreground Interconnect Servers
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443    
        - CidrIp: !Ref SharedInfrastructureVPCCIDR
          Description: WinRM
          IpProtocol: tcp
          FromPort: 5985
          ToPort: 5986                                
      VpcId: !Ref EpicVPC     

  HSWSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'HSWSG-${AWS::StackName}'
      GroupDescription: Security Group for External HSW Servers
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443    
        - CidrIp: !Ref SharedInfrastructureVPCCIDR
          Description: WinRM
          IpProtocol: tcp
          FromPort: 5985
          ToPort: 5986                                         
      VpcId: !Ref EpicVPC

  VPCESG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'VPCEndpointSG-${AWS::StackName}'
      GroupDescription: Security Group for VPC Endpoints
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: !Ref EpicVPCCIDR
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443    
        - CidrIp: !Ref SharedInfrastructureVPCCIDR
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443            
      VpcId: !Ref EpicVPC

  ODBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'ODBSG-${AWS::StackName}'
      GroupDescription: Security Group for Iris ODB
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref HSWSG
          Description: EpicTCP
          IpProtocol: tcp
          FromPort: 4972
          ToPort: 4972
        - SourceSecurityGroupId: !Ref ICFGSG
          Description: EpicTCP
          IpProtocol: tcp
          FromPort: 4972
          ToPort: 4972
        - CidrIp: !Ref SharedInfrastructureVPCCIDR
          Description: EpicTCP
          IpProtocol: tcp
          FromPort: 4972
          ToPort: 4972       
      VpcId: !Ref EpicVPC        

  CentralIngressSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'CentralIngressSG-${AWS::StackName}'
      GroupDescription: Security Group for Inbound traffic from internet
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443    
      VpcId: !Ref CentralIngressVPC  

  CentralEgressSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'Central-EgressSG-${AWS::StackName}'
      GroupDescription: Security Group for outbound traffic to Internet
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443    
      VpcId: !Ref CentralEgressVPC        
  InspectionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub 'InspectionSG-${AWS::StackName}'
      GroupDescription: Security Group for oInspection Firewall VPC
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: "-1"      
      SecurityGroupIngress:
        - CidrIp: !Ref CentralIngressVPCCIDR
          Description: HTTPS
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443      
      VpcId: !Ref InspectionVPC  

Outputs: 
  CentralIngressVPC:
    Description: Central Ingress VPC
    Export:
      Name: EpicRO-CentralIngressVPC
    Value: !Ref CentralIngressVPC

  CentralEgressVPC:
    Description: Central Egress VPC
    Export:
      Name: EpicRO-CentralEgressVPC
    Value: !Ref CentralEgressVPC  

  InspectionVPC:
    Description: Inspection VPC
    Export:
      Name: EpicRO-InspectionVPC
    Value: !Ref InspectionVPC  

  SharedInfrastructureVPC:
    Description: Shared Infrastructure VPC
    Export:
      Name: EpicRO-SharedInfrastructureVPC
    Value: !Ref SharedInfrastructureVPC

  EpicVPC:
    Description: Epic VPC
    Export:
      Name: EpicRO-EpicVPC
    Value: !Ref EpicVPC

  EpicTGW:
    Description: Epic Transit Gateway
    Export:
      Name: EpicRO-EpicTGW
    Value: !Ref EpicTransitGateway

  CentralIngressPublicSubnet1:
    Description: Central Ingress Public Subnet in AZ1
    Export:
      Name: EpicRO-CentralIngressPublic1
    Value: !Ref CentralIngressPublic1

  CentralIngressPublicSubnet2:
    Description: Central Ingress Public Subnet in AZ2
    Export:
      Name: EpicRO-CentralIngressPublic2
    Value: !Ref CentralIngressPublic2

  CentralIngressPrivateSubnet1:
    Description: Central Ingress Private Subnet in AZ1
    Export:
      Name: EpicRO-CentralIngressPrivate1
    Value: !Ref CentralIngressPrivate1

  CentralIngressPrivateSubnet2:
    Description: Central Ingress Private Subnet in AZ2
    Export:
      Name: EpicRO-CentralIngressPrivate2
    Value: !Ref CentralIngressPrivate2

  CentralEgressPublicSubnet1:
    Description: Central Egress Public Subnet in AZ1
    Export:
      Name: EpicRO-CentralEgressPublic1
    Value: !Ref CentralEgressPublic1

  CentralEgressPublicSubnet2:
    Description: Central Egress Public Subnet in AZ2
    Export:
      Name: EpicRO-CentralEgressPublic2
    Value: !Ref CentralEgressPublic2

  CentralEgressPrivateSubnet1:
    Description: Central Egress Private Subnet in AZ1
    Export:
      Name: EpicRO-CentralEgressPrivate1
    Value: !Ref CentralEgressPrivate1

  CentralEgressPrivateSubnet2:
    Description: Central Egress Private Subnet in AZ2
    Export:
      Name: EpicRO-CentralEgressPrivate2
    Value: !Ref CentralEgressPrivate2

  InspectionPrivateSubnet1:
    Description: Inspection Private Subnet in AZ1
    Export:
      Name: EpicRO-InspectionPrivate1
    Value: !Ref InspectionPrivate1

  InspectionPrivateSubnet2:
    Description: Inspection Private Subnet in AZ2
    Export:
      Name: EpicRO-InspectionPrivate2
    Value: !Ref InspectionPrivate2

  InspectionTGWSubnet1:
    Description: Inspection TGW Subnet in AZ1
    Export:
      Name: EpicRO-InspectionTGW1
    Value: !Ref InspectionTGW1

  InspectionTGWSubnet2:
    Description: Inspection TGW Subnet in AZ2
    Export:
      Name: EpicRO-InspectionTGW2
    Value: !Ref InspectionTGW2

  SharedInfrastructurePrivateSubnet1:
    Description: Shared Infrastructure Private Subnet in AZ1
    Export:
      Name: EpicRO-SharedInfrastructurePrivate1
    Value: !Ref SharedInfrastructurePrivate1

  SharedInfrastructurePrivateSubnet2:
    Description: SharedInfrastructure Private Subnet in AZ2
    Export:
      Name: EpicRO-SharedInfrastructurePrivate2
    Value: !Ref SharedInfrastructurePrivate2

  WSSPrivateSubnet1:
    Description: WSS Private Subnet in AZ1
    Export:
      Name: EpicRO-WSSPrivate1
    Value: !Ref WSSPrivate1

  WSSPrivateSubnet2:
    Description: WSS Private Subnet in AZ2
    Export:
      Name: EpicRO-WSSPrivate2
    Value: !Ref WSSPrivate2

  ODBPrivateSubnet1:
    Description: ODB Private Subnet in AZ1
    Export:
      Name: EpicRO-ODBPrivate1
    Value: !Ref ODBPrivate1

  KuiperSG:
    Description:
      Allow HTTPS traffic from anywhere to Kuiper servers and allow all outbound traffic
    Export:
      Name: EpicRO-KuiperSG
    Value: !Ref "KuiperSG"

  PulseSG:
    Description:
      Allow HTTPS traffic from anywhere to Pulse servers and allow all outbound traffic
    Export:
      Name: EpicRO-PulseSG
    Value: !Ref "PulseSG"

  SQLSG:
    Description:
      Allow ODBC traffic from Kuiper or SystemPulse SG and allow all outbound traffic
    Export:
      Name: EpicRO-SQLSG
    Value: !Ref "SQLSG"  

  ICFGSG:
    Description:
      Allow HTTPS traffic from Inspection Security Group and allow all outbound traffic
    Export:
      Name: EpicRO-ICFGSG
    Value: !Ref "ICFGSG"

  ODBSG:
    Description:
      Allow EpicTCP traffic from Pulse, Kuiper, ICFG, and HSW Security Groups and allow all outbound traffic
    Export:
      Name: EpicRO-ODBSG
    Value: !Ref "ODBSG"      

  HSWSG:
    Description:
      Allow HTTPS traffic from Inspection Security Group and allow all outbound traffic
    Export:
      Name: EpicRO-HSWSG
    Value: !Ref "HSWSG"

  CentralIngressSG:
    Description:
      Allow HTTPS traffic from anywhere and allow all outbound traffic
    Export:
      Name: EpicRO-CentralIngressSG
    Value: !Ref "CentralIngressSG"

  CentralEgressSG:
    Description:
      Allow HTTPS traffic from anywhere and allow all outbound traffic
    Export:
      Name: EpicRO-CentralEgressSG
    Value: !Ref "CentralEgressSG"

  InspectionSG:
    Description:
      Allow HTTPS traffic from Central Ingress SG and allow all outbound traffic
    Export:
      Name: EpicRO-InspectionSG
    Value: !Ref "InspectionSG"   

  VPCESG:
    Description:
      Security Group controlling access to VPC Endpoints for Session Manager
    Export:
      Name: EpicRO-VPCESG
    Value: !Ref "VPCESG"    

  CentralIngressPublic1RT:
    Description: Route Table attached to Central Ingress Public Subnet 1
    Export:
      Name: EpicRO-CentralIngressPublic1RT
    Value: !Ref CentralIngressPublic1RT

  CentralIngressPublic2RT:
    Description: Route Table attached to Central Ingress Public Subnet 2
    Export:
      Name: EpicRO-CentralIngressPublic2RT
    Value: !Ref CentralIngressPublic2RT

  CentralIngressPrivate1RT:
    Description: Route Table attached to Central Ingress Private Subnet 1
    Export:
      Name: EpicRO-CentralIngressPrivate1RT
    Value: !Ref CentralIngressPrivate1RT

  CentralIngressPrivate2RT:
    Description: Route Table attached to Central Ingress Private Subnet 2
    Export:
      Name: EpicRO-CentralIngressPrivate2RT
    Value: !Ref CentralIngressPrivate2RT

  CentralEgressPublic1RT:
    Description: Route Table attached to Central Egress Public Subnet 1
    Export:
      Name: EpicRO-CentralEgressPublic1RT
    Value: !Ref CentralEgressPublic1RT
  
  CentralEgressPublic2RT:
    Description: Route Table attached to Central Egress Public Subnet 2
    Export:
      Name: EpicRO-CentralEgressPublic2RT
    Value: !Ref CentralEgressPublic2RT

  CentralEgressPrivate1RT:
    Description: Route Table attached to Central Egress Private Subnet 1
    Export:
      Name: EpicRO-CentralEgressPrivate1RT
    Value: !Ref CentralEgressPrivate1RT
  
  CentralEgressPrivate2RT:
    Description: Route Table attached to Central Egress Private Subnet 2
    Export:
      Name: EpicRO-CentralEgressPrivate2RT
    Value: !Ref CentralEgressPrivate2RT

  InspectionPrivate1RT:
    Description: Route Table attached to Inspection Subnet 1
    Export:
      Name: EpicRO-InspectionPrivate1RT
    Value: !Ref InspectionPrivate1RT
  
  InspectionPrivate2RT:
    Description: Route Table attached to Inspection Subnet 2
    Export:
      Name: EpicRO-InspectionPrivate2RT
    Value: !Ref InspectionPrivate2RT

  InspectionTGW1RT:
    Description: Route Table attached to Inspection Subnet 1
    Export:
      Name: EpicRO-InspectionTGW1RT
    Value: !Ref InspectionTGW1RT
  
  InspectionTGW2RT:
    Description: Route Table attached to Inspection Subnet 2
    Export:
      Name: EpicRO-InspectionTGW2RT
    Value: !Ref InspectionTGW2RT

  SharedInfrastructurePrivate1RT:
    Description: Route Table attached to Shared Infrastructure Subnet 1
    Export:
      Name: EpicRO-SharedInfrastructurePrivate1RT
    Value: !Ref SharedInfrastructurePrivate1RT
  
  SharedInfrastructurePrivate2RT:
    Description: Route Table attached to Central Ingress Subnet 2
    Export:
      Name: EpicRO-SharedInfrastructurePrivate2RT
    Value: !Ref SharedInfrastructurePrivate2RT
  
  EpicWSSPrivate1RT:
    Description: Route Table attached to Epic WSS Subnet 1
    Export:
      Name: EpicRO-EpicWSSPrivate1RT
    Value: !Ref EpicWSSPrivate1RT
  
  EpicWSSPrivate2RT:
    Description: Route Table attached to Epic WSS Subnet 2
    Export:
      Name: EpicRO-EpicWSSPrivate2RT
    Value: !Ref EpicWSSPrivate2RT
  
  ODBPrivate1RT:
    Description: Route Table attached to ODB Subnet 1
    Export:
      Name: EpicRO-ODBPrivate1RT
    Value: !Ref ODBPrivate1RT
      